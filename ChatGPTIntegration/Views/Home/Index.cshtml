@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <div class="row clearfix">
        <div class="col-lg-12">
            <div class="card chat-app">
                <div class="chat">
                    <div class="chat-header clearfix">
                        <div class="row">
                            <div class="col-lg-6">
                                <a href="javascript:void(0);" data-toggle="modal" data-target="#view_info">
                                    <img src="https://upload.wikimedia.org/wikipedia/commons/0/04/ChatGPT_logo.svg" alt="avatar">
                                </a>
                                <div class="chat-about">
                                    <h6 class="m-b-0">ChatGPT</h6>
                                    <small>Online</small>
                                </div>
                            </div>
                            <div class="col-lg-6 hidden-sm text-right">
                                <a href="javascript:void(0);" class="btn btn-outline-primary" data-toggle="modal" data-target="#modalUploadFile" title="Anexar arquivo de áudio">
                                    <i class="fa fa-file-audio-o"></i>
                                </a>
                                <a href="javascript:void(0);" class="btn btn-outline-info">
                                    <i class="fa fa-cogs"></i>
                                </a>
                                <a href="javascript:void(0);" class="btn btn-outline-warning">
                                    <i class="fa fa-question"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div id="chat-history-user" class="chat-history">
                        @await Html.PartialAsync("_ChatHistory")
                    </div>

                    <div id="lottie-container-loading" class="stop-loading" style="margin-left: 47%;"></div>

                    <form id="form-send-message">
                        <div class="chat-message clearfix">
                            <div class="input-group mb-0">
                                <input name="message" id="message-user" type="text" class="form-control" placeholder="Pergunte algo ao ChatGPT...">

                                <input type="hidden" id="message-transcript-final" name="messageTranscriptFinal">
                                <input type="hidden" id="aux-recording" value="stopped">
                                <div class="input-group-prepend">
                                    <button type="submit" style="display: none"></button>
                                    <button type="button" style="border: 0px !important; outline: 0px auto -webkit-focus-ring-color !important;" title="Gravar áudio" id="record">
                                        <span class="input-group-text-custom">
                                            <i id="btn-icon-recording" class="fa fa-microphone" style="margin: 0px 6px;"></i>
                                            <div id="animation-recording" style="height: 27px; display: none; padding-bottom:5px;"></div>
                                        </span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal upload file -->
<div class="modal fade" id="modalUploadFile" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Upload de Arquivo de áudio</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="form-upload-audio" enctype="multipart/form-data">
                <div class="modal-body">
                    <div class="form-group">
                        <input type="file" class="form-control-file" id="file">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Enviar</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {

<script src="~/js/settings-animations-lottie.js"></script>

<script>

    // Carrega o histórico de conversas
    LoadChatHistory();
    async function LoadChatHistory(){

        startLogading();

        const response = await fetch('/Home/GetChatHistory');
        const htmlChatHistory = await response.text();
        const divChatHistory = document.getElementById('chat-history-user');
        divChatHistory.innerHTML = htmlChatHistory;

        stopLogading();
    }

    // Formulário para envio de mensagens
    const form = document.querySelector('#form-send-message');
    form.addEventListener('submit', (event) => {
        startLogading();
        event.preventDefault();

        const formData = new FormData(form);

        fetch('/Home/SendMessage', {
            method: 'POST',
            body: formData
        })
        .then(response => {
            LoadChatHistory();
            stopLogading();
        })
        .catch(error => {
            alert(error);
            stopLogading();
        });
        document.querySelector("#message-user").value = "";
    });

    // Formulário para envio de arquivos de áudio
    const formUploadAudio = document.querySelector('#form-upload-audio');
    formUploadAudio.addEventListener('submit', (evento) => {
        $('#modalUploadFile').modal('hide');
        startLogading();
        evento.preventDefault();

        const arquivo = document.querySelector('input[type=file]').files[0];
        const formData = new FormData();
        formData.append('FormFile', arquivo);

        fetch('/Home/SendMessageAudio', {
            method: 'POST',
            body: formData
        })
        .then(response => {
            LoadChatHistory();
            stopLogading();
        })
        .catch(error => {
            alert(error);
            stopLogading();
        });
    });

    // reprodução de áudio
    let audio;
    function reproduceAudio(idAudio){
        var audioInBase64 = document.querySelector("#" + idAudio).value;
        const bytes = atob(audioInBase64)
        .split('')
        .map(char => char.charCodeAt(0));

        // Cria um objeto Blob com o tipo MIME do arquivo de áudio
        const blob = new Blob([new Uint8Array(bytes)], { type: 'audio/mp3' });

        // Cria um objeto URL do JavaScript com o blob e o reproduz
        const audioUrl = URL.createObjectURL(blob);
        audio = new Audio(audioUrl);
        audio.play();
    }

    function stopAudio(){
        if (audio) {
            audio.pause();
        }
    }

</script>

}
