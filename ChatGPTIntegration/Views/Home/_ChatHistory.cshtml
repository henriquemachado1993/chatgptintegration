@using Domain.Models
@using System.Globalization
@using Domain.Models.Chat
@model ChatHistory

<ul class="m-b-0">

    @{
        var idAudioInBase64 = string.Empty;
        var typeMessage = string.Empty;
        var textRight = string.Empty;
        var floatRight = string.Empty;
    }

    @if (Model != null && Model.Chat.Any())
    {
        @foreach (var item in Model.Chat)
        {
            idAudioInBase64 = Guid.NewGuid().ToString();
            typeMessage = item.IsReplyUser ? "other-message" : "my-message";
            textRight = item.IsReplyUser ? "text-right" : "";
            floatRight = item.IsReplyUser ? "float-right" : "";

            <li class="clearfix">
                <div class="message-data @textRight">
                    <span class="message-data-time">@item.Date.ToString("h:mm:ss tt, ddd", DateTimeFormatInfo.InvariantInfo)</span>
                </div>
                <div class="message @typeMessage @floatRight">
                    @Html.Raw(@item.Messagem)

                    @if (item.FileAudio != null && !string.IsNullOrEmpty(item.FileAudio.AudioInBase64))
                    {
                        <a href="javascript:void(0);" onclick="reproduceAudio('@idAudioInBase64')">Reproduzir</a>
                        <a href="javascript:void(0);" onclick="stopAudio()">Pausar</a>
                    }

                </div>
                @if (item.FileAudio != null && !string.IsNullOrEmpty(item.FileAudio.AudioInBase64))
                {
                    <input type="hidden" id="@idAudioInBase64" name="@idAudioInBase64" value="@item.FileAudio.AudioInBase64">
                }
            </li>
        }
    }
</ul>